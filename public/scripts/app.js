require=function(e,n,t){function s(t,a){if(!n[t]){if(!e[t]){var i="function"==typeof require&&require;if(!a&&i)return i(t,!0);if(o)return o(t,!0);throw new Error("Cannot find module '"+t+"'")}var r=n[t]={exports:{}};e[t][0].call(r.exports,function(n){var o=e[t][1][n];return s(o?o:n)},r,r.exports)}return n[t].exports}for(var o="function"==typeof require&&require,a=0;a<t.length;a++)s(t[a]);return s}({"templates/app":[function(e,n,t){n.exports=e("EKhWsj")},{}],EKhWsj:[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push('<header>\n\n</header>\n<!-- <section class="row about">\n   <p class="col-xs-12">\n       Find the most efficient route to visit a series of places. The Route Optimizer is a graphical example of the classic <a href="http://en.wikipedia.org/wiki/Travelling_salesman_problem" target= "_blank"> Traveling Salesman Problem </a>\n   </p>\n</section > -->\n<section id="content" class="section">\n    <div class="side">\n\n    </div>\n    <div class="main maps">\n            <div class="original">\n                <div class="map">\n\n                </div>\n                <div class="overlay">\n                    <div class="step-container">\n                        <h3> Unoptimized Route </h3>\n                    </div>\n                </div>\n            </div>\n            <div class="optimized">\n                <div class="map">\n\n                </div>\n                <div class="generate">\n                </div>\n            </div>\n    </div>\n</section>\n<section id="stats" class="section">\n\n</section>\n\n<section class="section" id="credits">\n    <div class="side">\n        <h3> What we used </h3>\n    </div>\n    <div class="main">\n        <ul>\n            <li>\n                <a href="//forio.com" target="_blank">\n                    <img src="styles/assets/logos/epicenter-logo.svg" alt="">\n                    <h4> Forio Epicenter  </h4>\n                    <span> Server-side model hosting and interface API</span>\n                </a>\n            </li>\n            <li>\n                <a href="//forio.com/contour"\n                target="_blank"><img src="styles/assets/logos/contour-logo.svg" alt="">\n                   <h4> Forio Contour </h4>\n                   <span> Interactive JavaScript charts for data visualization</span>\n                </a>\n            </li>\n            <li>\n                <a href="//google.com/maps"\n                target="_blank"><img src="styles/assets/logos/map.svg" alt="">\n                    <h4> Google Maps   </h4>\n                    <span> Desktop and mobile web mapping </span>\n                </a>\n            </li>\n            <li>\n                <a href="http://julialang.org/"\n                target="_blank"><img src="styles/assets/logos/julia.svg" alt="">\n                    <h4> Julia  </h4>\n                    <span> Dynamic programming language for technical computing </span>\n                </a>\n            </li>\n            <li>\n                <a href="//jump.readthedocs.org/en/release-0.4/jump.html"\n                target="_blank"><img src="styles/assets/logos/opensource-logo.svg" alt="">\n                    <h4> JuMP </h4>\n                    <span> Linear, integer, and quadratic programming in Julia </span>\n                </a>\n            </li>\n        </ul>\n    </div>\n</section>\n<section id="how-we-did-it" class="section">\n    <div class="side">\n        <h3> How we did it</h3>\n    </div>\n    <div class="main">\n\n\n    </div>\n</section>\n\n<footer>\n    Developed by <a class="logo" href="//forio.com" target="_blank"> <img src="styles/assets/logo-white.svg" alt="/forio"> </a>\n</footer>\n')}();return buf.join("")}},{}],"templates/code":[function(e,n,t){n.exports=e("VoU/s8")},{}],"VoU/s8":[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push(' <!-- HTML generated using hilite.me --><div class="code-container" style="overflow:auto;width:auto;border-width:.1em .1em .1em .8em;"><table><tr><td><pre style="margin: 0; line-height: 125%" class="line-numbers">\n  1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n 14\n 15\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n 25\n 26\n 27\n 28\n 29\n 30\n 31\n 32\n 33\n 34\n 35\n 36\n 37\n 38\n 39\n 40\n 41\n 42\n 43\n 44\n 45\n 46\n 47\n 48\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194</pre></td><td><pre style="margin: 0; line-height: 125%" class="code"><span style="color: #75715e">## Original code taken from TSP example for JuMP.jl</span>\n<span style="color: #66d9ef">module</span> <span style="color: #f8f8f2">TSPSolver</span>\n\n<span style="color: #75715e">#############################################################################</span>\n<span style="color: #75715e"># JuMP</span>\n<span style="color: #75715e"># An algebraic modelling langauge for Julia</span>\n<span style="color: #75715e"># See http://github.com/JuliaOpt/JuMP.jl</span>\n<span style="color: #75715e">#############################################################################</span>\n<span style="color: #75715e"># tsp.jl</span>\n<span style="color: #75715e">#</span>\n<span style="color: #75715e"># Solves the travelling salesman problem using integer programming and </span>\n<span style="color: #75715e"># lazy generation of the subtour elimination constraints.</span>\n<span style="color: #75715e">#############################################################################</span>\n\n<span style="color: #66d9ef">using</span> <span style="color: #f8f8f2">JuMP</span>\n<span style="color: #66d9ef">using</span> <span style="color: #f8f8f2">GLPKMathProgInterface</span>\n<span style="color: #75715e"># using CPLEX</span>\n\n<span style="color: #75715e"># extractTour</span>\n<span style="color: #75715e"># Given a n-by-n matrix representing the solution to an undirected TSP,</span>\n<span style="color: #75715e"># extract the tour as a vector</span>\n<span style="color: #75715e"># Input:</span>\n<span style="color: #75715e">#  n        Number of cities</span>\n<span style="color: #75715e">#  sol      n-by-n 0-1 symmetric matrix representing solution</span>\n<span style="color: #75715e"># Output:</span>\n<span style="color: #75715e">#  tour     n+1 length vector of tour, starting and ending at 1</span>\n<span style="color: #66d9ef">function</span><span style="color: #a6e22e"> extractTour</span><span style="color: #f8f8f2">(n,</span> <span style="color: #f8f8f2">sol)</span>\n    <span style="color: #f8f8f2">tour</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span>  <span style="color: #75715e"># Start at city 1 always</span>\n    <span style="color: #f8f8f2">cur_city</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1</span>\n\n    <span style="color: #66d9ef">while</span> <span style="color: #f8f8f2">true</span>\n        <span style="color: #75715e"># Look for first arc out of current city</span>\n        <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">j</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n</span>\n            <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">sol[cur_city,j]</span> <span style="color: #f92672">&gt;=</span> <span style="color: #ae81ff">1</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1e-6</span>\n                <span style="color: #75715e"># Found next city</span>\n                <span style="color: #f8f8f2">push</span><span style="color: #f92672">!</span><span style="color: #f8f8f2">(tour,</span> <span style="color: #f8f8f2">j)</span>\n                <span style="color: #75715e"># Don&#39;t ever use this arc again</span>\n                <span style="color: #f8f8f2">sol[cur_city,</span> <span style="color: #f8f8f2">j]</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0.0</span>\n                <span style="color: #75715e"># sol[j, cur_city] = 0.0</span>\n                <span style="color: #75715e"># Move to next city</span>\n                <span style="color: #f8f8f2">cur_city</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">j</span>\n                <span style="color: #66d9ef">break</span>\n            <span style="color: #66d9ef">end</span>\n        <span style="color: #66d9ef">end</span>\n        <span style="color: #75715e"># If we have come back to 1, stop</span>\n        <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">cur_city</span> <span style="color: #f92672">==</span> <span style="color: #ae81ff">1</span>\n            <span style="color: #66d9ef">break</span>\n        <span style="color: #66d9ef">end</span>\n    <span style="color: #66d9ef">end</span>  <span style="color: #75715e"># end while</span>\n    <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">tour</span>\n<span style="color: #66d9ef">end</span>\n\n<span style="color: #75715e"># findSubtour</span>\n<span style="color: #75715e"># Given a n-by-n matrix representing solution to the relaxed</span>\n<span style="color: #75715e"># undirected TSP problem, find a set of nodes belonging to a subtour</span>\n<span style="color: #75715e"># Input:</span>\n<span style="color: #75715e">#  n        Number of cities</span>\n<span style="color: #75715e">#  sol      n-by-n 0-1 symmetric matrix representing solution</span>\n<span style="color: #75715e"># Outputs:</span>\n<span style="color: #75715e">#  subtour  n length vector of booleans, true iff in a particular subtour</span>\n<span style="color: #75715e">#  subtour_length   Number of cities in subtour (if n, no subtour found)</span>\n<span style="color: #66d9ef">function</span><span style="color: #a6e22e"> findSubtour</span><span style="color: #f8f8f2">(n,</span> <span style="color: #f8f8f2">sol)</span>\n    <span style="color: #75715e"># Initialize to no subtour</span>\n    <span style="color: #f8f8f2">subtour</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">fill(false,n)</span>\n    <span style="color: #75715e"># Always start looking at city 1</span>\n    <span style="color: #f8f8f2">cur_city</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1</span>\n    <span style="color: #f8f8f2">subtour[cur_city]</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">true</span>\n    <span style="color: #f8f8f2">subtour_length</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1</span>\n    <span style="color: #66d9ef">while</span> <span style="color: #f8f8f2">true</span>\n        <span style="color: #75715e"># Find next node that we haven&#39;t yet visited</span>\n        <span style="color: #f8f8f2">found_city</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">false</span>\n        <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">j</span> <span style="color: #66d9ef">in</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n</span>\n            <span style="color: #66d9ef">if</span> <span style="color: #f92672">!</span><span style="color: #f8f8f2">subtour[j]</span>\n                <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">sol[cur_city,</span> <span style="color: #f8f8f2">j]</span> <span style="color: #f92672">&gt;=</span> <span style="color: #ae81ff">1</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1e-6</span>\n                    <span style="color: #75715e"># Arc to unvisited city, follow it</span>\n                    <span style="color: #f8f8f2">cur_city</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">j</span>\n                    <span style="color: #f8f8f2">subtour[j]</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">true</span>\n                    <span style="color: #f8f8f2">found_city</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">true</span>\n                    <span style="color: #f8f8f2">subtour_length</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>\n                    <span style="color: #66d9ef">break</span>  <span style="color: #75715e"># Move on to next city</span>\n                <span style="color: #66d9ef">end</span>\n            <span style="color: #66d9ef">end</span>\n        <span style="color: #66d9ef">end</span>\n        <span style="color: #66d9ef">if</span> <span style="color: #f92672">!</span><span style="color: #f8f8f2">found_city</span>\n            <span style="color: #75715e"># We are done</span>\n            <span style="color: #66d9ef">break</span>\n        <span style="color: #66d9ef">end</span>\n    <span style="color: #66d9ef">end</span>\n    <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">subtour,</span> <span style="color: #f8f8f2">subtour_length</span>\n<span style="color: #66d9ef">end</span>\n\n<span style="color: #75715e"># buildTSP</span>\n<span style="color: #75715e"># Given a matrix of city locations, build the TSP</span>\n<span style="color: #75715e"># Inputs:</span>\n<span style="color: #75715e">#   n       Number of cities</span>\n<span style="color: #75715e">#   cities  n-by-n matrix of distancers between cities</span>\n<span style="color: #75715e"># Output:</span>\n<span style="color: #75715e">#   m       JuMP model</span>\n<span style="color: #66d9ef">function</span><span style="color: #a6e22e"> buildTSP</span><span style="color: #f8f8f2">(n,</span> <span style="color: #f8f8f2">dist)</span>\n    <span style="color: #75715e"># Create a model that will use GLPK to solve</span>\n    <span style="color: #f8f8f2">m</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">Model(solver</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">GLPKSolverMIP())</span>\n    <span style="color: #75715e"># m = Model(solver=CplexSolver())</span>\n\n    <span style="color: #75715e"># x[i,j] is 1 iff we travel from i to j, 0 otherwise</span>\n    <span style="color: #f8f8f2">@defVar(m,</span> <span style="color: #f8f8f2">x[</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n,</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n],</span> <span style="color: #f8f8f2">Bin)</span>\n\n    <span style="color: #75715e"># Minimize length of tour</span>\n    <span style="color: #f8f8f2">@setObjective(m,</span> <span style="color: #f8f8f2">Min,</span> <span style="color: #f8f8f2">sum{dist[i,j]</span><span style="color: #f92672">*</span><span style="color: #f8f8f2">x[i,j],</span> <span style="color: #f8f8f2">i</span><span style="color: #f92672">=</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n,j</span><span style="color: #f92672">=</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n})</span>\n\n    <span style="color: #75715e"># Don&#39;t allow self-arcs</span>\n    <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n</span>\n        <span style="color: #f8f8f2">@addConstraint(m,</span> <span style="color: #f8f8f2">x[i,i]</span> <span style="color: #f92672">==</span> <span style="color: #ae81ff">0</span><span style="color: #f8f8f2">)</span>\n    <span style="color: #66d9ef">end</span>\n\n    <span style="color: #75715e"># We must enter and leave every city once and only once</span>\n    <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n</span>\n        <span style="color: #f8f8f2">@addConstraint(m,</span> <span style="color: #f8f8f2">sum{x[i,j],</span> <span style="color: #f8f8f2">j</span><span style="color: #f92672">=</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n}</span> <span style="color: #f92672">==</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)</span>\n        <span style="color: #f8f8f2">@addConstraint(m,</span> <span style="color: #f8f8f2">sum{x[j,i],</span> <span style="color: #f8f8f2">j</span><span style="color: #f92672">=</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n}</span> <span style="color: #f92672">==</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)</span>\n    <span style="color: #66d9ef">end</span>\n\n    <span style="color: #66d9ef">function</span><span style="color: #a6e22e"> subtour</span><span style="color: #f8f8f2">(cb)</span>\n        <span style="color: #75715e"># Check for integer solution, if not, return before adding constraint</span>\n        <span style="color: #f8f8f2">integer_solution</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">check_integrality(n,</span> <span style="color: #f8f8f2">getValue(x))</span>\n        <span style="color: #66d9ef">if</span> <span style="color: #f92672">!</span><span style="color: #f8f8f2">integer_solution</span>\n            <span style="color: #66d9ef">return</span>\n        <span style="color: #66d9ef">end</span>\n\n        <span style="color: #75715e"># Find any set of cities in a subtour</span>\n        <span style="color: #f8f8f2">subtour,</span> <span style="color: #f8f8f2">subtour_length</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">findSubtour(n,</span> <span style="color: #f8f8f2">getValue(x))</span>\n        <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">subtour_length</span> <span style="color: #f92672">==</span> <span style="color: #f8f8f2">n</span>\n            <span style="color: #75715e"># This &quot;subtour&quot; is actually all cities, so we are done</span>\n            <span style="color: #66d9ef">return</span>\n        <span style="color: #66d9ef">end</span>\n\n        <span style="color: #75715e"># Subtour found - add lazy constraint</span>\n        <span style="color: #75715e"># We will build it up piece-by-piece</span>\n        <span style="color: #f8f8f2">arcs_from_subtour</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AffExpr()</span>\n\n        <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n</span>\n            <span style="color: #66d9ef">if</span> <span style="color: #f92672">!</span><span style="color: #f8f8f2">subtour[i]</span>\n                <span style="color: #75715e"># If this city isn&#39;t in subtour, skip it</span>\n                <span style="color: #66d9ef">continue</span>\n            <span style="color: #66d9ef">end</span>\n            <span style="color: #75715e"># Want to include all arcs from this city, which is in</span>\n            <span style="color: #75715e"># the subtour, to all cities not in the subtour</span>\n            <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">j</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n</span>\n                <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">==</span> <span style="color: #f8f8f2">j</span>\n                    <span style="color: #75715e"># Self-arc</span>\n                    <span style="color: #66d9ef">continue</span>\n                <span style="color: #66d9ef">elseif</span> <span style="color: #f8f8f2">subtour[j]</span>\n                    <span style="color: #75715e"># Both ends in same subtour</span>\n                    <span style="color: #66d9ef">continue</span>\n                <span style="color: #66d9ef">else</span>\n                    <span style="color: #75715e"># j isn&#39;t in subtour</span>\n                    <span style="color: #f8f8f2">arcs_from_subtour</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">x[i,j]</span>\n                <span style="color: #66d9ef">end</span>\n            <span style="color: #66d9ef">end</span>\n        <span style="color: #66d9ef">end</span>\n\n        <span style="color: #75715e"># Add the new subtour elimination constraint we built</span>\n        <span style="color: #f8f8f2">addLazyConstraint(cb,</span> <span style="color: #f8f8f2">arcs_from_subtour</span> <span style="color: #f92672">&gt;=</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)</span>\n    <span style="color: #66d9ef">end</span>  <span style="color: #75715e"># End function subtour</span>\n\n    <span style="color: #75715e"># Solve the problem with our cut generator</span>\n    <span style="color: #f8f8f2">setLazyCallback(m,</span> <span style="color: #f8f8f2">subtour)</span>\n    <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">m</span>\n<span style="color: #66d9ef">end</span> <span style="color: #75715e"># end buildTSP</span>\n\n<span style="color: #75715e"># Solve the TSP</span>\n<span style="color: #75715e"># Input:</span>\n<span style="color: #75715e">#   m: JuMP model</span>\n<span style="color: #75715e"># Output:</span>\n<span style="color: #75715e">#   tour Vector with order to cities are visited in</span>\n<span style="color: #66d9ef">function</span><span style="color: #a6e22e"> solveTSP</span><span style="color: #f8f8f2">(m)</span>\n    <span style="color: #f8f8f2">status</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">solve(m)</span>\n    <span style="color: #75715e"># println(&quot;Objective value: $(getObjectiveValue(m)), status: $status&quot;)</span>\n    <span style="color: #f8f8f2">n</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">int(sqrt(m</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">numCols))</span>\n    <span style="color: #f8f8f2">tour</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">extractTour(n,</span> <span style="color: #f8f8f2">getValue(m</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">dictList[</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]))</span>\n    <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">tour</span>\n<span style="color: #66d9ef">end</span>  <span style="color: #75715e"># end solveTSP</span>\n\n<span style="color: #75715e"># Determines if the current solution is within 1e-6 of integrality</span>\n<span style="color: #66d9ef">function</span><span style="color: #a6e22e"> check_integrality</span><span style="color: #f8f8f2">(n,</span> <span style="color: #f8f8f2">sol)</span>\n    <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #66d9ef">in</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n</span>\n        <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">j</span> <span style="color: #66d9ef">in</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:n</span>\n            <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">abs(sol[i,j]</span> <span style="color: #f92672">-</span> <span style="color: #f8f8f2">int(sol[i,j]))</span> <span style="color: #f92672">&gt;</span> <span style="color: #ae81ff">1e-6</span>\n                <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">false</span>\n            <span style="color: #66d9ef">end</span>\n        <span style="color: #66d9ef">end</span>\n    <span style="color: #66d9ef">end</span>\n    <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">true</span>\n<span style="color: #66d9ef">end</span>\n\n<span style="color: #66d9ef">end</span>\n</pre></td></tr></table></div>\n')}();return buf.join("")}},{}],"templates/loader":[function(e,n,t){n.exports=e("fzRo2l")},{}],fzRo2l:[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push('<div class="step-container">\n    <h3> Optimized Route </h3>\n\n    <div class="status">\n        <button> Calculate Best Route </button>\n        <ol class=\'steps\'>\n\n        </ol>\n    </status>\n</div>\n')}();return buf.join("")}},{}],"templates/loading":[function(e,n,t){n.exports=e("0LuzlO")},{}],"0LuzlO":[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push('<ul>\n    <li class="load-message">Loading...</li>\n</ul>')}();return buf.join("")}},{}],"templates/save-custom":[function(e,n,t){n.exports=e("t+upNB")},{}],"t+upNB":[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push('<input value="" type="text" placeholder="Name your Travel Plan"/>\n<div class="toggle-save-button btn">\n</div>\n')}();return buf.join("")}},{}],"templates/scenarios":[function(e,n,t){n.exports=e("R84Uzl")},{}],R84Uzl:[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push('<a class="logo" href="//forio.com" target="_blank"> <img src="styles/assets/logo.svg" alt="/forio"> </a>\n<h1> Optimize Your\n    <div class="scen-selector">\n        <select id="lstScenarioSwitcher">\n            '),_(scenarios).each(function(e,n){buf.push('\n                <option value="',escape(n),'" '),n===selected&&buf.push(" selected "),buf.push(" > ",escape(e)," </option>\n            ")}),buf.push("\n        </select>\n    </div>\n    Route\n</h1>\n")}();return buf.join("")}},{}],"templates/share":[function(e,n,t){n.exports=e("XQ/uFe")},{}],"XQ/uFe":[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push('<a href="https://www.facebook.com/sharer.php" class="facebook"></a>\n<a href="https://twitter.com/share" class="twitter"></a>\n<i id="copy-icon" data-clipboard-text="',escape(url),'" title="Click to copy this route."></i>')}();return buf.join("")}},{}],"templates/donut-chart":[function(e,n,t){n.exports=e("IusW/o")},{}],"IusW/o":[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push('<h6> savings </h6>\n<div class="graph">\n\n</div>\n')}();return buf.join("")}},{}],"templates/metric":[function(e,n,t){n.exports=e("n7rOn0")},{}],n7rOn0:[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push("    <h4> ",escape(caption),' </h4>\n        <div class="value">\n            <strong  class="original"> ',original," </strong> ",escape(unit),'\n        </div>\n        <div class="value">\n            <strong class="optimized">  ',optimized," </strong> ",escape(unit),"\n        </div>\n\n")}();return buf.join("")}},{}],"templates/stats":[function(e,n,t){n.exports=e("a1QvnU")},{}],a1QvnU:[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push("<div>\n    <h4> Stops </h4>\n    <strong> ",escape(stops)," </strong>\n</div>\n<div>\n    <h4>Possible Routes</h4>\n    <strong> ",escape(possibleRoutes)," </strong>\n</div>\n")}();return buf.join("")}},{}],"templates/editable-list-item":[function(e,n,t){n.exports=e("NE/5ED")},{}],"NE/5ED":[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push('<input type="text" value="',escape(name),'" autofocus/> <button class="btn"> + </button>\n')}();return buf.join("")}},{}],"templates/waypoint-list-item-template":[function(e,n,t){n.exports=e("bNooQQ")},{}],bNooQQ:[function(require,module,exports){module.exports=function anonymous(locals,filters,escape,rethrow){escape=escape||function(e){return String(e).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push("",escape(name),"\n")}();return buf.join("")}},{}],"views/app-view":[function(e,n,t){n.exports=e("53L23T")},{}],"53L23T":[function(e,n,t){var s=e("views/waypoint-list-view"),o=e("views/original-map-view"),a=e("views/optimized-map-view"),i=e("views/stats-view"),r=e("views/code-view"),l=e("views/loader-view"),c=e("views/scenarios-view"),p=(e("models/route-optimizer-model"),e("views/base-view")),f=e("views/save-custom-view"),u=e("views/share-view"),d=e("views/loading-view"),h=e("services/epicenter-runs-service");n.exports=p.extend({template:e("templates/app"),initialize:function(){this.model.on("load",this.renderMaps,this),p.prototype.initialize.apply(this,arguments),h.getRunID()},renderMaps:function(){this.originalMapView.render(),this.optimizedMapView.render()},render:function(){this.renderSelf(),this.renderContents()},renderSelf:function(){return this.$el.html(this.template()),this;

},renderContents:function(){this.originalMapView=new o({collection:this.model.get("original"),el:this.$(".maps .original .map")}),this.originalMapView.render(),this.map=this.originalMapView.map,this.optimizedMapView=new a({collection:this.model.get("optimized"),model:this.model,el:this.$(".maps .optimized .map")}),this.scenarioView=new c({el:this.$("header"),model:this.model}),this.scenarioView.render();var e=new i({model:this.model,el:$("#stats")});e.render();var n=new s({collection:this.model.get("original"),model:this.model,className:"waypoints",app:this});$("#content .side").html(n.render().$el);var t=new f({collection:this.model.get("original"),model:this.model,app:this});$("#content .side").append(t.render().$el);var p=new d({model:this.model});$("#content .side").append(p.render().$el);var h=new u({model:this.model});$("#content .side").append(h.render().$el);var m=new r({el:$("#how-we-did-it .main")});m.render();var g=new l({model:this.model,el:$(".maps .optimized .generate")});return g.render(),this}})},{"views/waypoint-list-view":"/C70sX","views/original-map-view":"Y3iJUM","views/optimized-map-view":"gQsx4Z","views/stats-view":"3RDt65","views/code-view":"S7SdKR","views/loader-view":"tlW6EF","views/scenarios-view":"KiQH56","models/route-optimizer-model":"6RePbT","views/base-view":"pTofvf","views/save-custom-view":"yR/bCz","views/share-view":"Vtihln","views/loading-view":"kWT/ex","services/epicenter-runs-service":"Lk12xx","templates/app":"EKhWsj"}],"views/base-view":[function(e,n,t){n.exports=e("pTofvf")},{}],pTofvf:[function(e,n,t){n.exports=function(){return Backbone.View.extend({initialize:function(e){return _.extend(this,_.omit(e,"el","$el","model","className","tagName","collection","attributes")),Backbone.View.prototype.initialize.call(this,e)},close:function(){this.onClose&&this.onClose(),this.cleanUp(),this.remove()},cleanUp:function(){this.undelegateEvents();var e=_.filter(this,function(e){return e instanceof Backbone.View});_.invoke(e,"close");var n=_.filter(this,function(e){return _.isArray(e)&&e.length>0&&e[0]instanceof Backbone.View});_.each(n,function(e){_.invoke(e,"close")})}})}()},{}],"views/code-view":[function(e,n,t){n.exports=e("S7SdKR")},{}],S7SdKR:[function(e,n,t){n.exports=Backbone.View.extend({template:e("templates/code"),render:function(){return this.$el.html(this.template()),this}})},{"templates/code":"VoU/s8"}],"views/donut-chart-view":[function(e,n,t){n.exports=e("sewKRp")},{}],sewKRp:[function(e,n,t){var s=e("views/base-view");Contour["export"]("donutTextOneValue",function(e,n,t){{var s=e[0].data[0].y,o=s>=0?parseInt(100*s,10)+"%":"";n.append("text").attr("class","center-text").attr("x",12).attr("y",43).text(o)}}),n.exports=s.extend({template:e("templates/donut-chart"),initialize:function(){this.original=this.model.get("original"),this.optimized=this.model.get("optimized"),this.original.on("routesRecalculated",this.render,this),this.optimized.on("routesRecalculated",this.render,this),s.prototype.initialize.apply(this,arguments)},getData:function(){var e=this.dataSource(this.original),n=this.dataSource(this.optimized),t=n/e;return t>1?1:t},render:function(){var e=this.getData();e&&e!==1/0?(this.renderSelf(),this.renderChart(e)):this.$el.empty()},renderSelf:function(){this.$el.html(this.template())},renderChart:function(e){var n=[{x:"Gain",y:1-e},{x:"Rest",y:e}],t=new Contour({el:this.$(".graph").get(0),chart:{width:70,height:70},pie:{piePadding:0,innerRadius:28,outerRadius:35},tooltip:{formatter:function(e){return e.data.x+": "+formatter(e.data.y)}}}).pie();return t.setData(n).donutTextOneValue(n).render(),this}})},{"views/base-view":"pTofvf","templates/donut-chart":"IusW/o"}],"views/loader-view":[function(e,n,t){n.exports=e("tlW6EF")},{}],tlW6EF:[function(e,n,t){var s=e("views/base-view"),o=null,a=null,i={distance_matrix:"Analyzing <strong> <%= waypoints %> </strong> locations.",optimze:"Evaluating <strong> <%= possibleRoutes %> </strong> possible routes.",drawing:"Plotting Optimized Route."};n.exports=s.extend({template:e("templates/loader"),events:{click:"handleGenerate"},initialize:function(){this.model.on("change:generated",this.handleGenerateChange,this),s.prototype.initialize.apply(this,arguments)},addProgressItem:function(e){a&&a.removeClass("progress").addClass("complete");var n=_.template(i[e],this.model.toJSON());a=$('<li class="progress">  '+n+" </li>"),a.appendTo(this.$(".steps"))},clearProgress:function(e){this.$(".steps").empty()},resetView:function(){this.$el.removeClass("generated"),this.$el.removeClass("in-progress"),this.render()},render:function(){return this.$el.html(this.template()),this},handleGenerate:function(){if(!this.model.get("generated")){this.$el.addClass("in-progress"),this.$(".steps").empty(),o=this.model.optimize();var e=this;o.progress(function(n){e.addProgressItem(n)}).fail(_.bind(this.resetView,this))}},handleGenerateChange:function(){this.model.get("generated")?(this.$el.removeClass("in-progress"),this.$el.addClass("generated")):this.$el.removeClass("generated")}})},{"views/base-view":"pTofvf","templates/loader":"fzRo2l"}],"views/loading-view":[function(e,n,t){n.exports=e("kWT/ex")},{}],"kWT/ex":[function(e,n,t){n.exports=Backbone.View.extend({template:e("templates/loading"),className:"loading-container",loadingEvents:{routesave:"Saving Route...",routeload:"Loading Route..."},initialize:function(){var e=this;_.each(this.loadingEvents,function(n,t){e.model.on(t,_.bind(e.showLoading,e,t))}),this.model.on("hideloading",this.hideLoading,this)},render:function(){return this.$el.html(this.template()),this},showLoading:function(e){var n=this.loadingEvents[e];this.$(".load-message").html(n),this.$el.addClass("loading")},hideLoading:function(){this.$(".load-message").html(""),this.$el.removeClass("loading")}})},{"templates/loading":"0LuzlO"}],"views/map-view":[function(e,n,t){n.exports=e("t306Ze")},{}],t306Ze:[function(e,n,t){var s=e("views/waypoint-marker-view"),o=Backbone.View;n.exports=o.extend({gDirDisplays:[],markers:[],gRouteOptions:{},initialize:function(){o.prototype.initialize.apply(this,arguments)},addMarker:function(e){var n=new s({model:e,map:this.map});n.render(),this.markers.push(n)},clearMarkers:function(){_(this.markers).each(function(e){e.handleRemove()}),this.markers=[]},addDirection:function(e){var n=this,t=this.collection.indexOf(e);t>0&&this.collection.getDirections(t-1,t).done(function(e){n.drawRoute.call(n,e)})},render:function(){return this.renderSelf(),this.renderWaypoints(),this.renderDirections(),this},renderSelf:function(){if(this.map){var e=this.getBounds();return this.map.fitBounds(e),this}var n={zoom:13,draggable:!1,disableDefaultUI:!0,disableDoubleClickZoom:!0,scrollwheel:!1,styles:[{featureType:"road.highway",stylers:[{visibility:"off"}]}]};this.map=new google.maps.Map(this.el,n),this.fitBounds();var t=this;return google.maps.event.addDomListener(window,"resize",function(){var e=t.map;t.fitBounds(),google.maps.event.trigger(e,"resize");var n=t.getBounds();e.fitBounds(n)}),this},fitBounds:function(){var e=this.collection.getValidModels();if(1===e.length)this.map.setZoom(13),this.map.setCenter(e[0].getLatLong());else{var n=this.getBounds();this.map.fitBounds(n)}},renderWaypoints:function(){return this.clearMarkers(),this.collection.each(this.addMarker,this),this},getBounds:function(){var e=_.invoke(this.collection.getValidModels(),"getLatLong"),n=new google.maps.LatLngBounds;return _(e).each(function(e){n.extend(e)}),n},drawRoute:function(e){var n=this,t=new google.maps.DirectionsRenderer($.extend({},{map:n.map,preserveViewport:!0,suppressMarkers:!0,draggable:!1},this.gRouteOptions));t.setDirections(e.gResult),this.gDirDisplays.push(t)},clearRoutes:function(){_(this.gDirDisplays).each(function(e){e.setMap(null)}),this.gDirDisplays=[]},renderDirections:function(){this.clearRoutes();var e=this;this.collection.populateAllRoutes().done(function(n){n.gResult&&(e.drawRoute.call(e,n),e.fitBounds())})}})},{"views/waypoint-marker-view":"48QFlq"}],"views/optimized-map-view":[function(e,n,t){n.exports=e("gQsx4Z")},{}],gQsx4Z:[function(e,n,t){var s=e("views/map-view");n.exports=s.extend({gRouteOptions:{polylineOptions:{strokeColor:"#e6a640"}},initialize:function(){this.collection.on("sort",this.renderDirections,this),this.collection.on("reset",this.render,this),s.prototype.initialize.apply(this,arguments)},handleReset:function(){this.renderWaypoints()},render:function(){return this.renderSelf(),this.renderWaypoints(),this.fitBounds(),this.clearRoutes(),this}})},{"views/map-view":"t306Ze"}],"views/original-map-view":[function(e,n,t){n.exports=e("Y3iJUM")},{}],Y3iJUM:[function(e,n,t){var s=e("views/map-view");n.exports=s.extend({initialize:function(){this.collection.on("change:latitude",this.handleLatUpdate,this),s.prototype.initialize.apply(this,arguments)},handleLatUpdate:function(e,n){n&&this.updateWaypoints()},updateWaypoints:function(){this.renderWaypoints(),this.renderDirections()}})},{"views/map-view":"t306Ze"}],"views/waypoint-marker-view":[function(e,n,t){n.exports=e("48QFlq")},{}],"48QFlq":[function(e,n,t){var s=e("views/waypoint-item-view");n.exports=s.extend({initialize:function(){_.bindAll(this,"toggleSelected"),this.model.on("change:latitude",this.updateLocation,this),s.prototype.initialize.apply(this,arguments)},getIcon:function(){var e=this.iconType(),n={url:"styles/assets/marker-sprite-shadow.png",size:new google.maps.Size(40,40)},t={flag:{anchor:new google.maps.Point(22,40),origin:new google.maps.Point(0,0),type:"flag"},selected:{anchor:new google.maps.Point(32,37),origin:new google.maps.Point(0,80),type:"selected"},base:{anchor:new google.maps.Point(32,37),origin:new google.maps.Point(0,40),type:"base"}};return $.extend({},n,t[e])},iconType:function(){var e=this.model.get("selected"),n=this.model.collection,t=n.indexOf(this.model);return 0===t?"flag":e?"selected":"base"},selectPoint:function(){this.marker.setIcon(this.getIcon())},handleRemove:function(){this.marker.setMap(null),s.prototype.handleRemove.apply(this,arguments)},toggleSelected:function(){var e="selected"===this.marker.getIcon().type;this.model.set({selected:!e})},updateLocation:function(){var e=this.model.getLatLong();this.marker.setPosition(e)},render:function(){var e=this.model.getLatLong();return this.marker=new google.maps.Marker({position:e,map:this.map,icon:this.getIcon(),title:this.model.get("name")}),google.maps.event.addListener(this.marker,"mouseover",this.toggleSelected),google.maps.event.addListener(this.marker,"mouseout",this.toggleSelected),this}})},{"views/waypoint-item-view":"1CuxJr"}],"views/save-custom-view":[function(e,n,t){n.exports=e("yR/bCz")},{}],"yR/bCz":[function(e,n,t){var s=(e("views/waypoint-list-item-view"),e("views/base-view")),o=(e("views/editable-list-item-view"),e("services/epicenter-data-service")),a=9;n.exports=s.extend({template:e("templates/save-custom"),className:"save-container",events:{"click .save-button":"saveRoute","click .toggle-save-button":"toggleSave","keyup input":"validateName"},initialize:function(){this.collection.on("add",this.render,this),this.model.on("change:currentScenario",this.render,this),s.prototype.initialize.apply(this,arguments)},toggleSave:function(){this.$el.hasClass("editable")?this.saveRoute():this.$el.addClass("editable")},saveRoute:function(){var e=this.collection.filter(function(e){var n=e.get("name");return n&&""!==n}),n=this.$("input").val(),t={routeName:n,waypoints:_.map(e,function(e){return e.toJSON()})};this.$el.html("");var s=this;this.model.trigger("routesave"),o.saveRoute(t).done(function(e){s.model.trigger("hideloading"),s.app.router.navigate(e,{trigger:!0})})},validateName:function(e){var n=$(e.target).val(),t=""===$.trim(n)?"removeClass":"addClass";this.$el[t]("valid")},render:function(){this.$el.empty();var e=(this.collection.length==a,"custom"===this.model.get("currentScenario"));return e&&this.$el.html(this.template()),this}})},{"views/waypoint-list-item-view":"o6SeUv","views/base-view":"pTofvf","views/editable-list-item-view":"N44oap","services/epicenter-data-service":"zFrGKG","templates/save-custom":"t+upNB"}],"views/scenarios-view":[function(e,n,t){n.exports=e("KiQH56")},{}],KiQH56:[function(e,n,t){var s=e("views/base-view");n.exports=s.extend({template:e("templates/scenarios"),scenarios:{custom:"Personalized Travel Plan","business-deliver":"Business Delivery","book-crawl":"San Francisco Book Crawl","sf-sightseeing":"San Francisco Sight-Seeing"},customRoute:{},events:{"change select":"handleScenarioSelect"},initialize:function(){this.model.on("change:currentScenario",this.select,this),this.model.on("change:routeName",this.addCustomRoute,this)},handleScenarioSelect:function(e){var n=$(e.target).val();window.location.hash=n},addCustomRoute:function(e){var n=e.get("currentScenario");this.customRoute={},this.customRoute[n]=e.get("routeName"),this.render()},select:function(e){this.$("select").val(e.get("currentScenario"))},render:function(){return this.$el.html(this.template({scenarios:$.extend(this.customRoute,this.scenarios),selected:this.model.get("currentScenario")})),this}})},{"views/base-view":"pTofvf","templates/scenarios":"R84Uzl"}],"views/share-view":[function(e,n,t){n.exports=e("Vtihln")},{}],Vtihln:[function(e,n,t){n.exports=Backbone.View.extend({template:e("templates/share"),className:"share-container",events:{"click .facebook":"facebookShare","click .twitter":"twitterShare"},initialize:function(){this.model.on("change:currentScenario",this.updateView,this)},isShareableRoute:function(){var e=this.model.get("currentScenario");return"custom"!==e},updateView:function(){this.isShareableRoute()?this.$el.show():this.$el.hide(),this.clipboard.setText(this.shareUrl())},render:function(){this.$el.html(this.template({url:this.shareUrl()})),ZeroClipboard.config({moviePath:"vendor/zeroclipboard/ZeroClipboard.swf"});var e=new ZeroClipboard(this.$("#copy-icon"));return e.on("load",function(n){e.on("complete",function(e){alert("The route URL has been saved to the clipboard!")})}),this.clipboard=e,this},facebookShare:function(e){e.preventDefault();var n=e.target.href,t=n+"?u=%url%".replace("%url%",encodeURIComponent(this.shareUrl()));this.openPopup(t)},twitterShare:function(e){e.preventDefault();var n=e.target.href,t=n+"?text=%text%&url=%url%".replace("%text%",encodeURIComponent("Check out my Optimized Travel Plan with Julia and Forio Epicenter")).replace("%url%",encodeURIComponent(this.shareUrl()));this.openPopup(t)},openPopup:function(e){window.open(e,"sharer","width=575,height=400")},shareUrl:function(){return window.location.href}})},{"templates/share":"XQ/uFe"}],"views/distance-traveled-metric-view":[function(e,n,t){n.exports=e("DWimzg")},{}],DWimzg:[function(e,n,t){var s=e("views/metric-view");n.exports=s.extend({caption:"Distance Traveled",unit:"Miles",metric:"totalDistanceTravelled",formatData:function(e){var n=621371e-9,t=e*n;return d3.format(",.1f")(t)}})},{"views/metric-view":"8wyemn"}],"views/longest-segment-metric-view":[function(e,n,t){n.exports=e("bWBD8D")},{}],bWBD8D:[function(e,n,t){var s=e("views/metric-view");n.exports=s.extend({caption:"Longest Segment",unit:"Miles",metric:"longestSegment",formatData:function(e){(!e||0>e)&&(e=0);var n=621371e-9,t=e*n;return d3.format(",.1f")(t)}})},{"views/metric-view":"8wyemn"}],"views/metric-view":[function(e,n,t){n.exports=e("8wyemn")},{}],"8wyemn":[function(e,n,t){var s=e("views/donut-chart-view"),o=e("views/base-view");n.exports=o.extend({template:e("templates/metric"),metric:"",format:"",caption:"",unit:"",className:"metric",initialize:function(){this.original=this.model.get("original"),this.optimized=this.model.get("optimized"),this.original.on("routesRecalculated reset",this.renderTable,this),this.optimized.on("routesRecalculated reset",this.renderTable,this),o.prototype.initialize.apply(this,arguments)},getData:function(e){return e.getMetric(this.metric)},formatData:function(e){return e},render:function(){return this.renderSelf(),this.renderTable(),this.renderChart(),this},renderSelf:function(){this.$el.empty(),this.$el.append('<div class="metric-container"> </div>'),this.$el.append('<div class="graph-container"> </div>')},renderTable:function(){var e=this.getData(this.original),n=this.getData(this.optimized),t=0!==e?this.formatData(e):"-",s=0!==n?this.formatData(n):"-";this.$(".metric-container").html(this.template({caption:this.caption,unit:this.unit,optimized:s,original:t}))},renderChart:function(){var e=new s({el:this.$(".graph-container"),model:this.model,dataSource:this.getData.bind(this)});return e.render(),this}})},{"views/donut-chart-view":"sewKRp","views/base-view":"pTofvf","templates/metric":"n7rOn0"}],"views/stats-view":[function(e,n,t){n.exports=e("3RDt65")},{}],"3RDt65":[function(e,n,t){var s=e("views/base-view");n.exports=s.extend({template:e("templates/stats"),subViews:[e("views/distance-traveled-metric-view"),e("views/longest-segment-metric-view"),e("views/time-taken-metric-view")],initialize:function(){var e=this.model.get("original");e.on("add",this.renderOverview,this),this.model.on("load",this.renderOverview,this),s.prototype.initialize.apply(this,arguments)},render:function(){return this.renderSelf(),this.renderOverview(),this.renderMetrics(),this},renderSelf:function(){this.$el.empty(),this.$el.append('<div class="side"> </div>'),this.$el.append('<div class="main"> </div>')},renderOverview:function(e){this.$(".side").html(this.template({stops:this.model.get("waypoints"),possibleRoutes:d3.format(",f")(this.model.get("possibleRoutes"))}))},renderMetrics:function(e){return _(this.subViews).each(function(e){var n=new e({model:this.model});this.$(".main").append(n.render().$el)},this),this}})},{"views/base-view":"pTofvf","templates/stats":"a1QvnU","views/distance-traveled-metric-view":"DWimzg","views/longest-segment-metric-view":"bWBD8D","views/time-taken-metric-view":"5e2SQ6"}],"views/time-taken-metric-view":[function(e,n,t){n.exports=e("5e2SQ6")},{}],"5e2SQ6":[function(e,n,t){var s=e("views/metric-view");n.exports=s.extend({caption:"Travel Time",unit:"Mins",metric:"timeTaken",formatData:function(e){var n=Math.floor(e/3600),t=d3.format("02d")(Math.floor(e%3600/60)),s=n>1?"s":"";return _.template('<%= hours %> <span class="unit"> Hr<%=suffix%> </span> <%= minutes %>',{hours:n,suffix:s,minutes:t})}})},{"views/metric-view":"8wyemn"}],"views/waypoint-item-view":[function(e,n,t){n.exports=e("1CuxJr")},{}],"1CuxJr":[function(e,n,t){var s=e("views/base-view");n.exports=s.extend({events:{mouseover:"toggleSelected",mouseout:"toggleSelected"},initialize:function(){this.model.on("change:selected",this.selectPoint,this),this.model.on("remove",this.handleRemove,this),s.prototype.initialize.apply(this,arguments)},handleRemove:function(){return this.close()},selectPoint:function(){var e=this.model.get("selected"),n=e?"addClass":"removeClass";this.$el[n]("selected")},toggleSelected:function(){this.model.set({selected:!this.$el.hasClass("selected")})},getData:function(){return this.model.toJSON()},render:function(){var e=this.getData(),n=this.template?this.template(e):e;return this.$el.html(n),this.trigger("rendered"),this}})},{"views/base-view":"pTofvf"}],"views/editable-list-item-view":[function(e,n,t){n.exports=e("N44oap")},{}],N44oap:[function(e,n,t){var s,o=e("views/waypoint-list-item-view");n.exports=o.extend({template:e("templates/editable-list-item"),events:{"keypress :text":"handleInput","click button":"handleDirectionComplete"},initialize:function(){s=new google.maps.Geocoder,this.on("rendered",this.postRender,this),o.prototype.initialize.apply(this,arguments)},handlePointChange:function(){},addLocationToModel:function(e,n){var t=n[0],s=t.name?t.name:t.formatted_address.split(",")[0];e.set({name:s,latitude:t.geometry.location.lat(),longitude:t.geometry.location.lng(),result:n})},handleDirectionComplete:function(e){e.preventDefault();var n=this.$(":text").val(),t=this;"forio"===$.trim(n).toLowerCase()?this.model.trigger("change:latitude"):s.geocode({address:n,bounds:this.map.getBounds()},function(e,n){n==google.maps.GeocoderStatus.OK&&t.addLocationToModel(t.model,e)})},handleInput:function(e){var n=$(e.target);this.model.set("name",n.val()),13==e.which&&this.$("button").trigger("click")},postRender:function(){var e=new google.maps.places.SearchBox(this.$(":text").get(0),{bounds:this.map.getBounds()}),n=this;return google.maps.event.addListener(this.map,"bounds_changed",function(){var t=n.map.getBounds();e.setBounds(t)}),google.maps.event.addListener(e,"places_changed",function(){var t=e.getPlaces();n.addLocationToModel(n.model,t)}),this}})},{"views/waypoint-list-item-view":"o6SeUv","templates/editable-list-item":"NE/5ED"}],"views/waypoint-list-item-view":[function(e,n,t){n.exports=e("o6SeUv")},{}],o6SeUv:[function(e,n,t){var s=e("views/waypoint-item-view");n.exports=s.extend({tagName:"li",template:e("templates/waypoint-list-item-template"),initialize:function(){this.model.on("change:name",this.handlePointChange,this),s.prototype.initialize.apply(this,arguments)},handlePointChange:function(){return this.render()}})},{"views/waypoint-item-view":"1CuxJr","templates/waypoint-list-item-template":"bNooQQ"}],"views/waypoint-list-view":[function(e,n,t){n.exports=e("/C70sX")},{}],"/C70sX":[function(e,n,t){var s=e("views/waypoint-list-item-view"),o=e("views/editable-list-item-view"),a=e("views/base-view"),i=9;n.exports=a.extend({tagName:"ul",editable:!1,doneEditing:!1,initialize:function(){this.collection.on("reset",this.reset,this),this.collection.on("add",this.render,this),this.model.on("change:currentScenario",this.render,this),a.prototype.initialize.apply(this,arguments)},addItem:function(e,n){var t=n===!0&&this.editable===!0,a=t?o:s,r=new a({model:e,map:this.app.map});this.$el.append(r.render().$el);var l=this.collection.length==i;if(t&&!l)e.on("change:latitude",function(){this.collection.add({})},this);else if(t&&l){var c=this;e.on("change:latitude",function(){c.doneEditing=!0,c.render()},this)}},reset:function(){this.doneEditing=!1,this.render()},render:function(){return this.$el.empty(),this.editable="custom"===this.model.get("currentScenario")&&!this.doneEditing,this.collection.each(function(e,n){var t=n===this.collection.length-1;this.addItem(e,t)},this),this.collection.length&&this.addItem(this.collection.at(0),!1),this}})},{"views/waypoint-list-item-view":"o6SeUv","views/editable-list-item-view":"N44oap","views/base-view":"pTofvf"}],"services/ajax-transport-service":[function(e,n,t){n.exports=e("7UMkjL")},{}],"7UMkjL":[function(e,n,t){n.exports=function(e){var n={contentType:"application/json",crossDomain:!0,processData:!1,url:e};return{get:function(e){var t=$.extend({},n,{data:JSON.stringify(e),method:"GET"});return $.ajax(t)},post:function(e){var t=$.extend({},n,{data:JSON.stringify(e),method:"POST"});return $.ajax(t)}}}},{}],"services/epicenter-data-service":[function(e,n,t){n.exports=e("zFrGKG")},{}],zFrGKG:[function(e,n,t){var s=(e("services/epicenter-runs-service"),e("services/epicenter-url-service"));n.exports=function(){var n={account:"showcase",project:"route-optimizer",collection:"routes"},t=s.getDataApiURL(n);return{saveRoute:function(n){var s=$.Deferred(),o=e("services/ajax-transport-service")(t);return o.post(n).done(function(e){collectionId=e.id,s.resolve(collectionId)}),s},getRoute:function(n,s){var o=$.Deferred();s=s||{};var a=e("services/ajax-transport-service")(t+"/"+n);return a.get(s).done(function(e){o.resolve(e)}).fail(function(){o.reject(arguments)}),o}}}()},{"services/epicenter-runs-service":"Lk12xx","services/epicenter-url-service":"UwW6uw","services/ajax-transport-service":"7UMkjL"}],"services/epicenter-operations-service":[function(e,n,t){n.exports=e("9Os/T2")},{}],"9Os/T2":[function(e,n,t){{var s=e("services/epicenter-runs-service"),o=e("services/epicenter-url-service");e("services/ajax-transport-service")}n.exports=function(){var n=o.getApiURL("operation"),t=e("services/ajax-transport-service");return{"do":function(e,o){var a,i=$.Deferred(),r={name:e,arguments:[o]},l=function(e,n,t){e&&404===e.status?s.getRunID(!0).fail(function(){i.reject()}).then(a):i.reject()};return a=function(e){return t(n+"/"+e).post(r).fail(l).then(function(e){i.resolve(e.result)})},s.getRunID().done(a).fail(l),i}}}()},{"services/epicenter-runs-service":"Lk12xx","services/epicenter-url-service":"UwW6uw","services/ajax-transport-service":"7UMkjL"}],"services/epicenter-runs-service":[function(e,n,t){n.exports=e("Lk12xx")},{}],Lk12xx:[function(e,n,t){var s=e("services/epicenter-url-service");n.exports=function(){var n,t=s.getApiURL("run"),o=e("services/ajax-transport-service")(t);return{listeners:[],runIdReq:null,getRunID:function(e){var t=$.Deferred(),s={account:"showcase",project:"route-optimizer",model:"TSPModel.jl"};if(!n||e){var a=this;this.listeners.push(t),this.runIdReq||(this.runIdReq=o.post(s).done(function(e){n=e.id,_.each(a.listeners,function(n){n.resolve(e.id)}),a.runIdReq=null}).fail(function(){var e=arguments;_.each(a.listeners,function(n){n.reject(e)}),a.runIdReq=null}))}else t.resolve(n);return t},create:function(){}}}()},{"services/epicenter-url-service":"UwW6uw","services/ajax-transport-service":"7UMkjL"}],"services/epicenter-url-service":[function(e,n,t){n.exports=e("UwW6uw")},{}],UwW6uw:[function(e,n,t){n.exports=function(){var e="https://api.forio.com";return{baseURL:e,getApiURL:function(n){return"run"===n.toLowerCase()||"model"===n.toLowerCase()||"operation"===n.toLowerCase()?e+"/model/"+n:void 0},getDataApiURL:function(n){return e+"/data/"+n.account+"/"+n.project+"/"+n.collection}}}()},{}],"models/app-model":[function(e,n,t){n.exports=e("rTCMPG")},{}],rTCMPG:[function(e,n,t){var s=e("models/base-model");n.exports=s.extend({defaults:{from:"",gResult:null,to:""}})},{"models/base-model":"8NIKk0"}],"models/google-maps-point-model":[function(e,n,t){n.exports=e("ct83l8")},{}],ct83l8:[function(e,n,t){var s=e("models/waypoint-model");n.exports=s.extend({defaults:{latitude:"",longitude:"",name:"",selected:!1},getLatLong:function(){var e=new google.maps.LatLng(this.get("latitude"),this.get("longitude"));return e}})},{"models/waypoint-model":"OxQKvY"}],"models/base-model":[function(e,n,t){n.exports=e("8NIKk0")},{}],"8NIKk0":[function(e,n,t){n.exports=Backbone.Model.extend({_hasProcessedDefaults:!1,_customEvalPropBindingList:{},_processDefaults:function(){var e=this;_(this.defaults).each(function(n,t){if(_.isFunction(n)){var s={},o=n.toString().match(/this.get\([^\)]*\)(\.[^\)]*\))?/gi);o&&_(o).each(function(n){var o=n.match(/(?:\"|\')([\S]*)(?:\"|\')/)[1];if(o===t)throw new Error("Circular reference found: Property "+o+" references itself. Printing model to console.","BaseModel.js");s[o]||(e.bind("change:"+o,function(){e.trigger.apply(e,["change:"+t].concat(arguments))}),s[o]=!0)}),e._customEvalPropBindingList[t]=s}}),this._hasProcessedDefaults=!0},get:function(e){this._hasProcessedDefaults||this._processDefaults();var n=Backbone.Model.prototype.get.call(this,e);return _.isFunction(n)?n.call(this):n},toJSON:function(){var e=this,n={},t=Backbone.Model.prototype.toJSON.call(this);return _.each(t,function(t,s){n[s]=e.get(s)}),n},save:function(e,n){var t={};_(e||this.toJSON()).each(function(e,n){"function"!=typeof e&&(t[n]=e)}),Backbone.Model.prototype.save.call(this,t,n)}})},{}],"models/route-model":[function(e,n,t){n.exports=e("4n83hK")},{}],"4n83hK":[function(e,n,t){var s=e("models/base-model");n.exports=s.extend({defaults:{from:"",gResult:null,to:""}})},{"models/base-model":"8NIKk0"}],"models/waypoint-model":[function(e,n,t){n.exports=e("OxQKvY")},{}],OxQKvY:[function(e,n,t){n.exports=Backbone.Model.extend({defaults:{latitude:"",longitude:"",name:"",selected:!1,order:null},getLatLong:function(){var e=new google.maps.LatLng(this.get("latitude"),this.get("longitude"));return e},toJSON:function(){return{name:this.get("name"),latitude:this.get("latitude"),longitude:this.get("longitude")}}})},{}],"collections/google-maps-waypoints-collection":[function(e,n,t){n.exports=e("RPBTeT")},{}],RPBTeT:[function(e,n,t){var s=e("models/google-maps-point-model"),o=e("collections/waypoints-collection"),a=e("models/route-model"),i=function(e){var n=_.map(e.rows,function(e){return _.map(e.elements,function(e){var n;return n=e.status===google.maps.DistanceMatrixElementStatus.OK?e.duration.value:0})});return n};n.exports=o.extend({model:s,isDirtyRoutes:!0,routes:{},initialize:function(){this.resetRoutes(),this.on("reset",this.resetRoutes,this),o.prototype.initialize.apply(this,arguments)},resetRoutes:function(){this.routes={gResult:null,legs:[]}},getMetric:function(e){var n={};return n.totalDistanceTravelled=_.reduce(this.routes.legs,function(e,n){return e+n.get("distance")},0),n.longestSegment=this.routes.legs.length?_.max(_.pluck(_.invoke(this.routes.legs,"toJSON"),"distance")):0,n.timeTaken=_.reduce(this.routes.legs,function(e,n){return e+n.get("time")},0),n[e]},getValidModels:function(){return _.reject(this.models,function(e){return!e.get("latitude")})},getDistanceMatrix:function(){var e=this.getValidModels(),n=_.invoke(e,"getLatLong"),t=new google.maps.DistanceMatrixService,s=$.Deferred(),o={origins:n,travelMode:google.maps.TravelMode.DRIVING,destinations:n};return t.getDistanceMatrix(o,function(e,n){if(n===google.maps.DistanceMatrixStatus.OK){var t=i(e);s.resolve(t)}else s.reject(n)}),s},getDirections:function(e,n,t){var s=this.at(e),o=this.at(n),i=$.Deferred(),r={origin:s.getLatLong(),destination:o.getLatLong(),travelMode:google.maps.TravelMode.DRIVING};t&&(r.waypoints=t);var l=this,c=new google.maps.DirectionsService;return c.route(r,function(e,n){n===google.maps.DirectionsStatus.OK?(l.routes.gResult=e,_(e.routes[0].legs).each(function(e,n){var t=new a({distance:e.distance.value,time:e.duration.value});l.routes.legs.push(t)}),i.resolve(l.routes)):i.reject(n)}),i},populateAllRoutes:function(){var e=$.Deferred(),n=this,t=this.getValidModels();if(this.isDirtyRoutes===!0&&t.length){this.resetRoutes();var s=t.slice(1,this.length),o=_.map(s,function(e){return{location:e.getLatLong(),stopover:!0}});this.getDirections(0,0,o).then(function(t){n.trigger("routesRecalculated"),e.resolve(t)})}else e.resolve(this.routes);return e}})},{"models/google-maps-point-model":"ct83l8","collections/waypoints-collection":"HozVZY","models/route-model":"4n83hK"}],"collections/data-api-loader":[function(e,n,t){n.exports=e("SQ5L6C")},{}],SQ5L6C:[function(e,n,t){var s=(e("services/epicenter-url-service"),e("services/epicenter-data-service"));n.exports=function(e){return{fetch:function(n,t){var o=t.done,a=t.model;return a.trigger("routeload"),s.getRoute(e).done(function(e){n.reset(e.waypoints,t),o&&o(e),a.set("routeName",e.routeName),a.trigger("hideloading")}).fail(function(){window.location.hash="",a.trigger("hideloading")})}}}},{"services/epicenter-url-service":"UwW6uw","services/epicenter-data-service":"zFrGKG"}],"collections/json-loader":[function(e,n,t){n.exports=e("zR3yh6")},{}],zR3yh6:[function(e,n,t){n.exports=function(e){return{fetch:function(n,t){return n.url="data/"+e+".json",n.fetch(t)}}}},{}],"collections/random-loader":[function(e,n,t){n.exports=e("+jyb2X")},{}],"+jyb2X":[function(e,n,t){n.exports=function(n){var t=e("services/ajax-transport-service"),s={maxResults:9};return{then:function(e){this.thenCallback=e},fetch:function(e,o){var a=this;return o=$.extend(s,o),t("data/"+n+".json").get().done(function(n){var t=_.sample(n,o.maxResults);e.reset(t,o),a.thenCallback&&a.thenCallback(t)}),this}}}},{"services/ajax-transport-service":"7UMkjL"}],"collections/waypoints-collection":[function(e,n,t){n.exports=e("HozVZY")},{}],HozVZY:[function(e,n,t){var s=e("models/waypoint-model");n.exports=Backbone.Collection.extend({model:s,distances:[],comparator:"order",getMetric:function(e){return 34},getDirections:function(e,n){}})},{"models/waypoint-model":"OxQKvY"}],1:[function(e,n,t){var s=e("./router"),o=e("views/app-view"),a=e("models/route-optimizer-model");$(function(){var e=new a,n=new s({model:e}),t=new o({model:e,el:"body",router:n});t.render(),Backbone.history.start({pushState:!1,root:"/"})})},{
"views/app-view":"53L23T","models/route-optimizer-model":"6RePbT","./router":2}],"models/route-optimizer-model":[function(e,n,t){n.exports=e("6RePbT")},{}],"6RePbT":[function(e,n,t){var s=e("models/base-model"),o=e("collections/google-maps-waypoints-collection"),a=e("../collections/loader/waypoint-loader"),i=e("services/epicenter-operations-service");n.exports=s.extend({defaults:{original:null,optimized:null,generated:!1,currentScenario:"",waypoints:function(){return this.get("original").getValidModels().length},possibleRoutes:function(){var e=function(n){return 1>=n?n:n*e(n-1)},n=this.get("waypoints"),t=e(n);return t}},initialize:function(){var e=new o;this.set("original",e);var n=e.clone();n.name="optimized",this.set("optimized",n),e.on("add",function(){n.reset(e.getValidModels())}),this.on("change:currentScenario",this.load,this),s.prototype.initialize.apply(this,arguments)},load:function(){this.get("original").reset();var e=this.get("currentScenario"),n=new a,t=n.loaderFactory(e),s=this;t.fetch(this.get("original"),{reset:!0,model:this}).then(function(e){var n=s.get("original").toArray();s.get("optimized").reset(n),s.trigger("load",n),s.set("generated",!1)})},getOptimizedValues:function(e){return i["do"]("solve",e)},optimize:function(){var e=this.get("original"),n=this,t=$.Deferred(),s=function(){t.reject()};return t.notify("distance_matrix"),e.getDistanceMatrix().done(function(e){t.notify("optimze"),n.getOptimizedValues(e).done(function(e){t.notify("drawing"),e.pop(),n.get("optimized").each(function(n,t){var s=_.indexOf(e,t);n.set("order",s,{silent:!0})}),n.get("optimized").sort(),n.set("generated",!0),t.resolve(n.get("optimized"))}).fail(s)}).fail(s),t}})},{"models/base-model":"8NIKk0","collections/google-maps-waypoints-collection":"RPBTeT","services/epicenter-operations-service":"9Os/T2","../collections/loader/waypoint-loader":"9fNxY4"}],"collections/waypoint-loader":[function(e,n,t){n.exports=e("9fNxY4")},{}],"9fNxY4":[function(e,n,t){n.exports=function(){var n=e("./data-api-loader"),t=e("./json-loader"),s=e("./random-loader"),o={custom:t,"book-crawl":t,"sf-sightseeing":t,"business-deliver":s};return{loaderFactory:function(e){var t=o[e];return t&&new t(e)||new n(e)}}}},{"./data-api-loader":"SQ5L6C","./json-loader":"zR3yh6","./random-loader":"+jyb2X"}],2:[function(e,n,t){n.exports=Backbone.Router.extend({routes:{"":"dashboard",":theme":"dashboard"},initialize:function(e){this.app=e.model},dashboard:function(e){e||(e="business-deliver"),this.app.set("currentScenario",e)}})},{}]},{},[1]);